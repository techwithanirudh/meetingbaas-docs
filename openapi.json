{
    "openapi": "3.1.0",
    "info": {
        "title": "Meeting BaaS API",
        "summary": "API for recording and transcribing video meetings across Zoom, Google Meet, and Microsoft Teams. Features include bot management, calendar integration, and transcription services.",
        "description": "Meeting BaaS API",
        "termsOfService": "https://meetingbaas.com/terms-and-conditions",
        "version": "1.1"
    },
    "servers": [
        {
            "url": "https://api.meetingbaas.com",
            "description": "Production server"
        }
    ],
    "paths": {
        "/bots/": {
            "post": {
                "description": "Join",
                "operationId": "join",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JoinRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JoinResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bots/{uuid}": {
            "delete": {
                "description": "Leave",
                "operationId": "leave",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeaveResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bots/meeting_data": {
            "get": {
                "description": "Get meeting data",
                "operationId": "get_meeting_data",
                "parameters": [
                    {
                        "in": "query",
                        "name": "bot_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Metadata"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendars/raw": {
            "post": {
                "description": "List raw calendars",
                "operationId": "list_raw_calendars",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ListRawCalendarsParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListRawCalendarsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendars/": {
            "get": {
                "description": "List calendars",
                "operationId": "list_calendars",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Calendar"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a calendar",
                "operationId": "create_calendar",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCalendarParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCalendarResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendars/{uuid}": {
            "get": {
                "description": "Get a calendar",
                "operationId": "get_calendar",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Calendar"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a calendar",
                "operationId": "delete_calendar",
                "responses": {
                    "200": {
                        "description": "no content"
                    }
                }
            },
            "patch": {
                "description": "Update a calendar",
                "operationId": "update_calendar",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCalendarParams"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateCalendarResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendar_events/{uuid}": {
            "get": {
                "description": "Get a calendar event",
                "operationId": "get_event",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendar_events/{uuid}/bot": {
            "post": {
                "description": "Schedule a record event",
                "operationId": "schedule_record_event",
                "parameters": [
                    {
                        "in": "query",
                        "name": "all_occurrences",
                        "description": "schedule a bot to all occurences of a recurring event",
                        "schema": {
                            "description": "schedule a bot to all occurences of a recurring event",
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "style": "form"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotParam2"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Unschedule a record event",
                "operationId": "unschedule_record_event",
                "parameters": [
                    {
                        "in": "query",
                        "name": "all_occurrences",
                        "description": "unschedule a bot from all occurences of a recurring event",
                        "schema": {
                            "description": "unschedule a bot from all occurences of a recurring event",
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch bot",
                "operationId": "patch_bot",
                "parameters": [
                    {
                        "in": "query",
                        "name": "all_occurrences",
                        "description": "schedule a bot to all occurences of a recurring event",
                        "schema": {
                            "description": "schedule a bot to all occurences of a recurring event",
                            "type": [
                                "boolean",
                                "null"
                            ]
                        },
                        "style": "form"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotParam3"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendar_events/": {
            "get": {
                "description": "List events",
                "operationId": "list_events",
                "parameters": [
                    {
                        "in": "query",
                        "name": "calendar_id",
                        "description": "filter events by calendar id",
                        "required": true,
                        "schema": {
                            "description": "filter events by calendar id",
                            "type": "string"
                        },
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "description": "Optional cursor for pagination, included in the `next` field of the response",
                        "schema": {
                            "description": "Optional cursor for pagination, included in the `next` field of the response",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "updated_at_gte",
                        "description": "fetch events updated at or after this date",
                        "schema": {
                            "description": "fetch events updated at or after this date",
                            "type": [
                                "string",
                                "null"
                            ]
                        },
                        "style": "form"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListEventResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "description": "This structure represents the user's account information.",
                "type": "object",
                "required": [
                    "created_at",
                    "email",
                    "id",
                    "status"
                ],
                "properties": {
                    "company_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/SystemTime"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lastname": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AccountInfos": {
                "description": "Structure consisting account information.",
                "type": "object",
                "required": [
                    "account"
                ],
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    }
                }
            },
            "ApiKeyResponse": {
                "type": "object",
                "required": [
                    "api_key"
                ],
                "properties": {
                    "api_key": {
                        "type": "string"
                    }
                }
            },
            "Attendee": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    }
                }
            },
            "AudioFrequency": {
                "type": "string",
                "enum": [
                    "16khz",
                    "24khz"
                ]
            },
            "AutomaticLeaveRequest": {
                "type": "object",
                "properties": {
                    "noone_joined_timeout": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "uint32",
                        "minimum": 0.0
                    },
                    "waiting_room_timeout": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "uint32",
                        "minimum": 0.0
                    }
                }
            },
            "Bot": {
                "type": "object",
                "required": [
                    "bot",
                    "duration",
                    "params"
                ],
                "properties": {
                    "bot": {
                        "$ref": "#/components/schemas/Bot2"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "params": {
                        "$ref": "#/components/schemas/BotParam"
                    }
                }
            },
            "Bot2": {
                "type": "object",
                "required": [
                    "account_id",
                    "bot_param_id",
                    "created_at",
                    "diarization_v2",
                    "id",
                    "meeting_url",
                    "mp4_s3_path",
                    "reserved",
                    "uuid"
                ],
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bot_param_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "partial-date-time"
                    },
                    "diarization_v2": {
                        "type": "boolean"
                    },
                    "ended_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "partial-date-time"
                    },
                    "errors": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "event_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "meeting_url": {
                        "type": "string"
                    },
                    "mp4_s3_path": {
                        "type": "string"
                    },
                    "reserved": {
                        "type": "boolean"
                    },
                    "scheduled_bot_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "session_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "BotData": {
                "type": "object",
                "required": [
                    "bot",
                    "transcripts"
                ],
                "properties": {
                    "bot": {
                        "$ref": "#/components/schemas/BotWithParams"
                    },
                    "transcripts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transcript"
                        }
                    }
                }
            },
            "BotPagined": {
                "type": "object",
                "required": [
                    "bots",
                    "has_more"
                ],
                "properties": {
                    "bots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Bot"
                        }
                    },
                    "has_more": {
                        "type": "boolean"
                    }
                }
            },
            "BotParam": {
                "type": "object",
                "required": [
                    "bot_name",
                    "webhook_url"
                ],
                "properties": {
                    "bot_image": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "bot_name": {
                        "type": "string"
                    },
                    "deduplication_key": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "enter_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "extra": true,
                    "noone_joined_timeout": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "recording_mode": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RecordingMode"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "speech_to_text": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SpeechToText2"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "streaming_audio_frequency": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AudioFrequency"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "streaming_input": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "streaming_output": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "waiting_room_timeout": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "webhook_url": {
                        "type": "string"
                    }
                }
            },
            "BotParam2": {
                "type": "object",
                "required": [
                    "bot_name"
                ],
                "properties": {
                    "bot_image": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "bot_name": {
                        "type": "string"
                    },
                    "deduplication_key": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "enter_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "extra": true,
                    "noone_joined_timeout": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "recording_mode": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RecordingMode"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "speech_to_text": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SpeechToText"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "streaming_audio_frequency": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AudioFrequency"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "streaming_input": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "streaming_output": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "waiting_room_timeout": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "webhook_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "BotParam3": {
                "type": "object",
                "properties": {
                    "bot_image": {
                        "default": null,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "bot_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deduplication_key": {
                        "default": null,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "enter_message": {
                        "default": null,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "extra": {
                        "default": null
                    },
                    "noone_joined_timeout": {
                        "default": null,
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "recording_mode": {
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/RecordingMode"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "speech_to_text": {
                        "default": null,
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/SpeechToText"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "streaming_audio_frequency": {
                        "default": null,
                        "anyOf": [
                            {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/AudioFrequency"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "streaming_input": {
                        "default": null,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "streaming_output": {
                        "default": null,
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "waiting_room_timeout": {
                        "default": null,
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "webhook_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "BotWithParams": {
                "type": "object",
                "required": [
                    "account_id",
                    "bot_name",
                    "bot_param_id",
                    "created_at",
                    "diarization_v2",
                    "id",
                    "meeting_url",
                    "mp4_s3_path",
                    "reserved",
                    "uuid",
                    "webhook_url"
                ],
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bot_image": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "bot_name": {
                        "type": "string"
                    },
                    "bot_param_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "partial-date-time"
                    },
                    "deduplication_key": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "diarization_v2": {
                        "type": "boolean"
                    },
                    "ended_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "partial-date-time"
                    },
                    "enter_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "errors": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "event_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "extra": true,
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "meeting_url": {
                        "type": "string"
                    },
                    "mp4_s3_path": {
                        "type": "string"
                    },
                    "noone_joined_timeout": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "recording_mode": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RecordingMode"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "reserved": {
                        "type": "boolean"
                    },
                    "scheduled_bot_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "session_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "speech_to_text_api_key": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "speech_to_text_provider": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SpeechToTextProvider"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "streaming_audio_frequency": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AudioFrequency"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "streaming_input": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "streaming_output": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "waiting_room_timeout": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "webhook_url": {
                        "type": "string"
                    }
                }
            },
            "Calendar": {
                "type": "object",
                "required": [
                    "email",
                    "google_id",
                    "name",
                    "uuid"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "google_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resource_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "CalendarListEntry": {
                "type": "object",
                "required": [
                    "email",
                    "id",
                    "is_primary"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "is_primary": {
                        "type": "boolean"
                    }
                }
            },
            "CreateCalendarParams": {
                "type": "object",
                "required": [
                    "oauth_client_id",
                    "oauth_client_secret",
                    "oauth_refresh_token",
                    "platform"
                ],
                "properties": {
                    "oauth_client_id": {
                        "type": "string"
                    },
                    "oauth_client_secret": {
                        "type": "string"
                    },
                    "oauth_refresh_token": {
                        "type": "string"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Provider"
                    },
                    "raw_calendar_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "CreateCalendarResponse": {
                "type": "object",
                "required": [
                    "calendar"
                ],
                "properties": {
                    "calendar": {
                        "$ref": "#/components/schemas/Calendar"
                    }
                }
            },
            "DailyTokenConsumption": {
                "type": "object",
                "required": [
                    "consumption_by_service",
                    "date"
                ],
                "properties": {
                    "consumption_by_service": {
                        "$ref": "#/components/schemas/TokenConsumptionByService"
                    },
                    "date": {
                        "type": "string"
                    }
                }
            },
            "EndMeetingQuery": {
                "type": "object",
                "required": [
                    "bot_uuid"
                ],
                "properties": {
                    "bot_uuid": {
                        "type": "string"
                    }
                }
            },
            "EndMeetingTrampolineQuery": {
                "type": "object",
                "required": [
                    "bot_uuid"
                ],
                "properties": {
                    "bot_uuid": {
                        "type": "string"
                    }
                }
            },
            "EndMeetingTrampolineRequest": {
                "type": "object",
                "required": [
                    "diarization_v2"
                ],
                "properties": {
                    "diarization_v2": {
                        "type": "boolean"
                    }
                }
            },
            "Event": {
                "type": "object",
                "required": [
                    "attendees",
                    "calendar_uuid",
                    "deleted",
                    "end_time",
                    "google_id",
                    "is_organizer",
                    "is_recurring",
                    "last_updated_at",
                    "meeting_url",
                    "name",
                    "raw",
                    "start_time",
                    "uuid"
                ],
                "properties": {
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attendee"
                        }
                    },
                    "bot_param": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BotParam"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "calendar_uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "google_id": {
                        "type": "string"
                    },
                    "is_organizer": {
                        "type": "boolean"
                    },
                    "is_recurring": {
                        "type": "boolean"
                    },
                    "last_updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "meeting_url": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "raw": true,
                    "recurring_event_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "FailedRecordRequest": {
                "type": "object",
                "required": [
                    "meeting_url",
                    "message"
                ],
                "properties": {
                    "meeting_url": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "GetAllBotsQuery": {
                "type": "object",
                "required": [
                    "limit",
                    "offset"
                ],
                "properties": {
                    "bot_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "partial-date-time"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "start_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "partial-date-time"
                    }
                }
            },
            "GetMeetingDataQuery": {
                "type": "object",
                "required": [
                    "bot_id"
                ],
                "properties": {
                    "bot_id": {
                        "type": "string"
                    }
                }
            },
            "GetStartedAccount": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "google_token_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "lastname": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "microsoft_token_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "GetWebhookUrlResponse": {
                "type": "object",
                "properties": {
                    "webhook_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "GetstartedQuery": {
                "type": "object",
                "properties": {
                    "redirect_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "JoinRequest": {
                "type": "object",
                "required": [
                    "bot_name",
                    "meeting_url",
                    "reserved"
                ],
                "properties": {
                    "automatic_leave": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AutomaticLeaveRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "bot_image": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "bot_name": {
                        "type": "string"
                    },
                    "deduplication_key": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "entry_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "extra": true,
                    "meeting_url": {
                        "type": "string"
                    },
                    "recording_mode": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RecordingMode"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "reserved": {
                        "type": "boolean"
                    },
                    "speech_to_text": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SpeechToText"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "start_time": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "uint64",
                        "minimum": 0.0
                    },
                    "streaming": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StreamingApiParameter"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "webhook_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "additionalProperties": false
            },
            "JoinRequestScheduled": {
                "type": "object",
                "required": [
                    "bot_param_id",
                    "meeting_url",
                    "schedule_origin"
                ],
                "properties": {
                    "bot_param_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "meeting_url": {
                        "type": "string"
                    },
                    "schedule_origin": {
                        "$ref": "#/components/schemas/ScheduleOrigin"
                    }
                },
                "additionalProperties": false
            },
            "JoinResponse": {
                "type": "object",
                "required": [
                    "bot_id"
                ],
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "JoinResponse2": {
                "type": "object",
                "required": [
                    "bot_id"
                ],
                "properties": {
                    "bot_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "LeaveResponse": {
                "type": "object",
                "required": [
                    "ok"
                ],
                "properties": {
                    "ok": {
                        "type": "boolean"
                    }
                }
            },
            "ListEventResponse": {
                "type": "object",
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "description": "Vector of calendar events matching the list criteria",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        }
                    },
                    "next": {
                        "description": "Optional url for fetching the next page of results if there are more results to fetch. The limit of events returned is 100. When None, there are no more results to fetch.",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "ListRawCalendarsParams": {
                "type": "object",
                "required": [
                    "oauth_client_id",
                    "oauth_client_secret",
                    "oauth_refresh_token",
                    "platform"
                ],
                "properties": {
                    "oauth_client_id": {
                        "type": "string"
                    },
                    "oauth_client_secret": {
                        "type": "string"
                    },
                    "oauth_refresh_token": {
                        "type": "string"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Provider"
                    }
                }
            },
            "ListRawCalendarsResponse": {
                "type": "object",
                "required": [
                    "calendars"
                ],
                "properties": {
                    "calendars": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalendarListEntry"
                        }
                    }
                }
            },
            "LoginAccount": {
                "type": "object",
                "required": [
                    "password",
                    "pseudo"
                ],
                "properties": {
                    "app_signin_token": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "google_chrome_token_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "google_token_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "microsoft_token_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "password": {
                        "type": "string"
                    },
                    "pseudo": {
                        "type": "string"
                    }
                }
            },
            "LoginQuery": {
                "type": "object",
                "properties": {
                    "redirect_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "Metadata": {
                "type": "object",
                "required": [
                    "bot_data",
                    "duration",
                    "mp4"
                ],
                "properties": {
                    "bot_data": {
                        "$ref": "#/components/schemas/BotData"
                    },
                    "duration": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mp4": {
                        "type": "string"
                    }
                }
            },
            "PostWebhookUrlRequest": {
                "type": "object",
                "required": [
                    "webhook_url"
                ],
                "properties": {
                    "webhook_url": {
                        "type": "string"
                    }
                }
            },
            "Provider": {
                "description": "Fields with value `\"simple\"` parse as `Kind::Simple`. Fields with value `\"fancy\"` parse as `Kind::SoFancy`.",
                "type": "string",
                "enum": [
                    "Google",
                    "Microsoft"
                ]
            },
            "QueryListEvent": {
                "type": "object",
                "required": [
                    "calendar_id"
                ],
                "properties": {
                    "calendar_id": {
                        "description": "filter events by calendar id",
                        "type": "string"
                    },
                    "cursor": {
                        "description": "Optional cursor for pagination, included in the `next` field of the response",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "updated_at_gte": {
                        "description": "fetch events updated at or after this date",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "QueryPatchRecordEvent": {
                "type": "object",
                "properties": {
                    "all_occurrences": {
                        "description": "schedule a bot to all occurences of a recurring event",
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                }
            },
            "QueryScheduleRecordEvent": {
                "type": "object",
                "properties": {
                    "all_occurrences": {
                        "description": "schedule a bot to all occurences of a recurring event",
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                }
            },
            "QueryUnScheduleRecordEvent": {
                "type": "object",
                "properties": {
                    "all_occurrences": {
                        "description": "unschedule a bot from all occurences of a recurring event",
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                }
            },
            "ReceivedMessageQuery": {
                "type": "object",
                "required": [
                    "session_id"
                ],
                "properties": {
                    "session_id": {
                        "type": "string"
                    }
                }
            },
            "RecognizerWord": {
                "type": "object",
                "required": [
                    "end_time",
                    "start_time",
                    "text"
                ],
                "properties": {
                    "end_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "start_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "text": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    }
                }
            },
            "RecordingMode": {
                "type": "string",
                "enum": [
                    "speaker_view",
                    "gallery_view",
                    "audio_only"
                ]
            },
            "RetryWebhookQuery": {
                "type": "object",
                "required": [
                    "bot_uuid"
                ],
                "properties": {
                    "bot_uuid": {
                        "type": "string"
                    }
                }
            },
            "ScheduleOrigin": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": [
                            "Event"
                        ],
                        "properties": {
                            "Event": {
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        },
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "required": [
                            "ScheduledBot"
                        ],
                        "properties": {
                            "ScheduledBot": {
                                "type": "object",
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        },
                        "additionalProperties": false
                    }
                ]
            },
            "SpeechToText": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/SpeechToTextApiParameter"
                    },
                    {
                        "$ref": "#/components/schemas/SpeechToTextProvider"
                    }
                ]
            },
            "SpeechToText2": {
                "type": "object",
                "required": [
                    "provider"
                ],
                "properties": {
                    "api_key": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "provider": {
                        "$ref": "#/components/schemas/SpeechToTextProvider"
                    }
                }
            },
            "SpeechToTextApiParameter": {
                "type": "object",
                "required": [
                    "provider"
                ],
                "properties": {
                    "api_key": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "provider": {
                        "$ref": "#/components/schemas/SpeechToTextProvider"
                    }
                }
            },
            "SpeechToTextProvider": {
                "type": "string",
                "enum": [
                    "Gladia",
                    "Runpod",
                    "Default"
                ]
            },
            "StartRecordFailedQuery": {
                "type": "object",
                "properties": {
                    "bot_uuid": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "StreamingApiParameter": {
                "type": "object",
                "properties": {
                    "audio_frequency": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AudioFrequency"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "input": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "output": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                }
            },
            "SyncResponse": {
                "type": "object",
                "properties": {
                    "has_updates": {
                        "description": "timestamp of last updated event if some events has been updated.",
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "SystemTime": {
                "type": "object",
                "required": [
                    "nanos_since_epoch",
                    "secs_since_epoch"
                ],
                "properties": {
                    "nanos_since_epoch": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 0.0
                    },
                    "secs_since_epoch": {
                        "type": "integer",
                        "format": "uint64",
                        "minimum": 0.0
                    }
                }
            },
            "TokenConsumptionByService": {
                "type": "object",
                "required": [
                    "duration",
                    "recording_tokens",
                    "streaming_input_hour",
                    "streaming_input_tokens",
                    "streaming_output_hour",
                    "streaming_output_tokens",
                    "transcription_byok_hour",
                    "transcription_byok_tokens",
                    "transcription_hour",
                    "transcription_tokens"
                ],
                "properties": {
                    "duration": {
                        "type": "string"
                    },
                    "recording_tokens": {
                        "type": "string"
                    },
                    "streaming_input_hour": {
                        "type": "string"
                    },
                    "streaming_input_tokens": {
                        "type": "string"
                    },
                    "streaming_output_hour": {
                        "type": "string"
                    },
                    "streaming_output_tokens": {
                        "type": "string"
                    },
                    "transcription_byok_hour": {
                        "type": "string"
                    },
                    "transcription_byok_tokens": {
                        "type": "string"
                    },
                    "transcription_hour": {
                        "type": "string"
                    },
                    "transcription_tokens": {
                        "type": "string"
                    }
                }
            },
            "TokenConsumptionQuery": {
                "type": "object",
                "required": [
                    "end_date",
                    "start_date"
                ],
                "properties": {
                    "end_date": {
                        "type": "string",
                        "format": "partial-date-time"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "partial-date-time"
                    }
                }
            },
            "Transcript": {
                "type": "object",
                "required": [
                    "bot_id",
                    "id",
                    "speaker",
                    "start_time",
                    "words"
                ],
                "properties": {
                    "bot_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "end_time": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "speaker": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "words": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Word"
                        }
                    }
                }
            },
            "Transcript2": {
                "type": "object",
                "required": [
                    "bot_id",
                    "speaker",
                    "start_time"
                ],
                "properties": {
                    "bot_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "end_time": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double"
                    },
                    "lang": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "speaker": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    }
                }
            },
            "Transcript3": {
                "type": "object",
                "required": [
                    "bot_id",
                    "id",
                    "speaker",
                    "start_time"
                ],
                "properties": {
                    "bot_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "end_time": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lang": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "speaker": {
                        "type": "string"
                    },
                    "start_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    }
                }
            },
            "Transcript4": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "bot_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    },
                    "end_time": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "lang": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "speaker": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "start_time": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    }
                }
            },
            "UpdateCalendarParams": {
                "type": "object",
                "required": [
                    "oauth_client_id",
                    "oauth_client_secret",
                    "oauth_refresh_token",
                    "platform"
                ],
                "properties": {
                    "oauth_client_id": {
                        "type": "string"
                    },
                    "oauth_client_secret": {
                        "type": "string"
                    },
                    "oauth_refresh_token": {
                        "type": "string"
                    },
                    "platform": {
                        "$ref": "#/components/schemas/Provider"
                    }
                }
            },
            "UserTokensResponse": {
                "type": "object",
                "required": [
                    "available_tokens",
                    "total_tokens_purchased"
                ],
                "properties": {
                    "available_tokens": {
                        "type": "string"
                    },
                    "last_purchase_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "partial-date-time"
                    },
                    "total_tokens_purchased": {
                        "type": "string"
                    }
                }
            },
            "Version": {
                "type": "object",
                "required": [
                    "build_date",
                    "location"
                ],
                "properties": {
                    "build_date": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    }
                }
            },
            "Word": {
                "type": "object",
                "required": [
                    "bot_id",
                    "end_time",
                    "id",
                    "start_time",
                    "text"
                ],
                "properties": {
                    "bot_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "end_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "start_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "text": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    }
                }
            }
        }
    }
}